@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav flex">
@if (SignInManager.IsSignedIn(User))
{

    var user = await UserManager.GetUserAsync(User);
    <li class="nav-item px-0 d-flex flex-column justify-content-center">
        <a id="manage" class="nav-link text-dark p-0" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@UserManager.GetUserName(User)</a>
        <p class="m-0"><i class="fa-solid fa-coins"></i> Bonus: @user!.Bonus</p>
    </li>
    <li class="nav-item d-flex flex-column justify-content-center">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">
                <i class="fa-solid fa-right-from-bracket fa-lg"></i>
            </button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
